{"id":"4W3i2hyrJTVfcLq85rWgduVQ3y3BMzrSD4pVUCMqPpFhmXWpqxQ","title":"Hacker News: Front Page","displayTitle":"HN Front","url":"https://hnrss.org/frontpage?points=75","feedLink":"https://news.ycombinator.com/","isQuery":false,"isEmpty":false,"isHidden":false,"itemCount":12,"items":[{"title":"I spent the day teaching seniors how to use an iPhone","url":"https://forums.macrumors.com/threads/i-spent-the-day-trying-to-teach-seniors-how-to-use-an-iphone-and-it-was-a-nightmare.2468117/","date":1759454432,"author":"dabinat","guid":238,"unread":true,"content":"\n\t\t\tHonestly, I think Apple really needs to simplify the iPhone for the elderly. I know there are accessibility modes, but you don’t want to have to go through all that and spend hours trying to customize the phone. Also, the whole phone setup process needs to be delayed; having to go through it for an hour puts them off from even wanting to bother. I first set the phones up to make accounts, but it turns out none of them could understand how to unlock the phone. Entering a passcode was a nightmare because they kept forgetting it, even though it was a birthday they knew, lol.<p>\nSo, I tried Touch ID and Face ID, and that was even more complicated and kept erroring out. Then, the Siri thing kept popping up on the phones with Touch ID, despite turning it off, and the whole swiping from the button kept making the screen go down to the bottom half. :/ There were too many apps; all they wanted was the phone app, but it doesn’t default to the keypad, which was too much for them to find.</p><p>\nThe phones are too fiddly now, and pressing random things as they try to hold the phone meant the phone got lost in a sea of opening stuff up. So, I tried the assistive access, but why isn’t this an option from the get-go? It asks you the age of setup; why not have a 65+ or something for a senior mode?</p><p>\nThey don’t need passcodes, accounts, and a sea of information. It’s insane, and it’s insane how fiddly these phones are. I never noticed because I’m used to it, but for these people with hands that barely move, the fake Touch ID button and the swiping from the bottom on Face ID phones seem to be the worst! I think having a proper physical button, like iPhones used to have, would have been superior. The one complaint about the fake button was that it didn’t feel like a real button, so they couldn’t gauge it.</p><p>\nI left there achieving nothing because they couldn’t figure out their old Nokia phones. The unlock thing on the keypad was too difficult, and if I turned that off, they kept dialing 999 in their pockets for some reason. That’s why I was there: they were calling emergency services 100 times a day, lol.</p><p>\nI think what I’ve realized is that I need to go back with flip phones that answer and hang up when you open and close them. However, the two I tried before didn’t act like that, and they had too many features. I really thought I could make the iPhone simple, but NOPE!</p><p>\nApple should work on their phones to make them more accessible and less fiddly, without having to go through a sea of menus.\n\t\t</p>","contentLength":2535,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=45457670"},{"title":"The strangest letter of the alphabet: The rise and fall of yogh","url":"https://www.deadlanguagesociety.com/p/history-of-letter-yogh","date":1759440882,"author":"penetralium","guid":237,"unread":true,"content":"<p>English spelling has a reputation. And it’s not a good one. </p><p>English spelling is so complex that we’ve made mastering it into a competitive sport: what would be the point of a spelling bee in a language with a predictable spelling system? Where’s the fun unless you have to sweat a little as you struggle to recall whether this particular word is one where “‘i’ before ‘e’ except after ‘c’” doesn’t apply?</p><p>In short, English has a complicated writing system.</p><p><a href=\"https://www.deadlanguagesociety.com/p/why-english-doesnt-use-accents\" rel=\"\">the French</a><a href=\"https://colingorrie.substack.com/p/the-lost-letters-of-the-english-alphabet\" rel=\"\">stingy printers</a><a href=\"https://www.deadlanguagesociety.com/p/the-invention-that-ruined-english\" rel=\"\">late medieval yuppies</a></p><p>But like an Icelandic family saga, we begin not with the story of yogh, but with the story of its parent. So allow me to introduce you to the letter ‘g,’ which, as you’ll soon see, is a complicated letter in its own right, dating back to Old English.</p><p>It starts with the shape of the letter. When modern editors print Old English today, they print nice, modern-looking ‘g’s — that is, the ones we use today, with an open or closed loop on the bottom, depending on the typeface.</p><blockquote><p><em></em></p><p>‘How we have heard of the glory of the kings of the spear-Danes in days of old’ </p></blockquote><p>But in the manuscript, they’re written like this:</p><blockquote><p><em></em></p><p><em>London, British Library, Cotton MS Vitellius A XV, f. 132r.</em></p></blockquote><p>Now, there’s clearly lots of other weird stuff going on in the manuscript, but focus on how the ‘g’ is represented. While the majuscule (capital) ‘G’ in ‘gardena’ is spelled more like a modern ‘g,’ all the others are insular ‘ᵹ.’</p><p>So for a period, both ‘g’ and ‘ᵹ’ were used in England, but generally speaking, each was used for writing the ‘g’ sound in a different language. Simple enough, but the stage was set for things to get a lot more complicated. </p><p>But for that, we need the help of the Normans.</p><p><em><strong>The Dead Language Society</strong></em></p><p><em><strong>upgrade to support my mission of bringing historical linguistics out of the ivory tower</strong><strong>two extra Saturday deep-dives</strong></em></p><p><em><a href=\"https://www.deadlanguagesociety.com/p/book-club\" rel=\"\">Beowulf Book Club</a><a href=\"https://www.deadlanguagesociety.com/p/beowulf-book-club-1\" rel=\"\">part 1</a><a href=\"https://www.deadlanguagesociety.com/p/beowulf-book-club-2-400915\" rel=\"\">part 2</a></em></p><p><a href=\"https://www.deadlanguagesociety.com/p/why-english-doesnt-use-accents\" rel=\"\">Norman scribes</a></p><p>These Norman scribes inherited the writing traditions that the Carolingian renaissance had given birth to. This meant the latest, greatest, 11th-century French versions of the Carolingian minuscule. </p><p>These weren’t so different from the way Anglo-Saxon scribes had written Latin. But they were very different from the way they had written Old English, especially in the ‘g’ department.</p><p>But that wasn’t so much of an issue, since these Norman-trained scribes, and those of the generations that came after them, didn’t write much English at all. In fact, writing in English of any kind was very scarce up until the end of the 12th century.</p><p>Over the course of that tumultuous — and, for English, silent — century, the language had changed a great deal. All the scribes trained in the old, Anglo-Saxon traditions were long dead, so when a new generation of scribes turned their attention once again to English, they had to devise some new strategies for writing it.</p><p>And this, after a surprisingly long delay, is where we first meet the star of today’s issue: ‘ȝ,’ also known as yogh. </p><p><em>entirely different letter</em></p><p>Or is it actually so bizarre?</p><p>Modern English spelling is, of course, chaotic. So perhaps it shouldn’t surprise us that we too have a very yogh-like situation with two of our letters: ‘c’ and — wait for it — ‘g.’</p><p>A process like this happened in the ancestor of French too, just slightly differently. Instead of the ‘g’ being pulled forward into a ‘y’ sound before ‘i’ and ‘e,’ it got pulled forward into a ‘j’ sound. </p><p>Back then, there was just one single language, which would later split into English, Dutch, German, Swedish, and all the other Germanic languages.</p><p>And that’s why yogh has two sounds, each of which corresponds to a pronunciation of the Old English letter ‘ᵹ’ that the French scribal tradition couldn’t accept writing with ‘g.’</p><p>When you’re reading Middle English, it can get a bit confusing: Which kind of yogh is which?</p><p><em>Sir Gawain and the Green Knight</em></p><blockquote><p><em></em><em>Sir Gawain and the Green Knight</em></p></blockquote><p><a href=\"https://www.deadlanguagesociety.com/p/the-case-for-middle-english\" rel=\"\">modern readers of Middle English</a></p><p><a href=\"https://www.deadlanguagesociety.com/p/the-lost-letters-of-the-english-alphabet\" rel=\"\">other letters unique to English</a></p><p>And Scottish printers were more eager to keep it than English printers were. So they took advantage of the visual similarity between ‘ȝ’ and ‘z’ — most forms of cursive writing in English still write ‘z’ like ‘ȝ’ — to write their yoghs with ‘z’s.</p><p>And that’s how one single letter of the Middle English alphabet ended up being pronounced like ‘y,’ ‘gh,’ or even eventually like ‘z.’ I warned you it would be complicated. </p><p>But the journey through the history of yogh has allowed us to peer down some interesting side alleys of the history of writing, from Carolingian scribal practices to the compromises of Scottish printers.</p><p>I don’t lament the loss of yogh myself, not nearly as much as I lament the fate of other lost letters. But if the cause of yogh is one ȝou fancy taking up ȝourself, there’s nothing standing in ȝour waȝ (it’s included in many modern fonts), althouȝ I can imagine hiȝer causes to aspire to.</p>","contentLength":5015,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=45455882"},{"title":"Why most product planning is bad and what to do about it","url":"https://blog.railway.com/p/product-planning-improvement","date":1759433648,"author":"ndneighbor","guid":236,"unread":true,"content":"<ol></ol><ol></ol>","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=45454374"},{"title":"OpenAI's H1 2025: $4.3B in income, $13.5B in loss","url":"https://www.techinasia.com/news/openais-revenue-rises-16-to-4-3b-in-h1-2025","date":1759430248,"author":"breadsniffer","guid":235,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=45453586"},{"title":"Babel is why I keep blogging with Emacs","url":"https://entropicthoughts.com/why-stick-to-emacs-blog","date":1759428401,"author":"ibobev","guid":234,"unread":true,"content":"<p>\nEvery time I look at someone’s simple static site generation setup for their\nblog, I feel a pang of envy. I’m sure I could make a decent blogging engine in\n2,000 lines of code, and it would be something I’d understand, be proud over,\nable to extend, and willing to share with others.\n</p><p>\nInstead, I write these articles in Org mode, and use mostly the standard Org\npublishing functions to export them to . This is <a href=\"https://entropicthoughts.com/long-hiatus-emacs-upgrades.html\">sometimes brittle</a>, but\nmost annoyingly, I don’t understand it. I have been asked for details on how my\npublishing flow works, but the truth is I have no idea what happens when I run\nthe  command.\n</p><p>\nI could find out by tracing the evaluation of the Lisp code that runs on export,\nbut I won’t, because just the  exporting code () is 5,000\nlines of complexity. The general exporting framework ( and\n) is 8,000 lines. The framework depends on Org parsing code\n() which is at least another 9,000 lines. This is over 20,000\nlines of complexity I’d need to contend with.\n</p><p>\nIt might seem like a no-brainer to just write that 2,000 line custom static\ngenerator and use that instead.\n</p><p>\nAny lightweight markup format (like Markdown or ReStructuredText or whatever)\nallows for embedding code blocks, but Org, through Babel, can  that code on\nexport, and then display the output in the published document, <i>even when the\noutput is a table or an image</i>. It supports sessions that lets code reuse\ndefinitions from earlier code blocks. It allows for injecting variables from the\nmarkup into the code, and vice versa. As a bonus, Org doesn’t require a\nJavaScript syntax highlighter, because it generates inline styles in the source\ncode.\n</p><p>\nIt does this for a large number of languages, although I mainly use it with R\nfor drawing plots. Being able to do this is incredibly convenient, because it\nmakes it trivial to <a href=\"https://entropicthoughts.com/intention-to-treat-experiments.html\">draft data, illustrations, and text at the same time</a>,\nadjusting both until the article coheres. Having tried it, I cannot see myself\nliving without it.\n</p><p>\nA simple 2,000 line blogging engine would be a fun weekend project. Mirroring\nthe features of Babel I use would turn it into a multi-month endeavour for\nsomeone with limited time such as myself. Not going to happen, and I will\ncontinue to beat myself up for overcomplicating my publishing workflow.\n</p>","contentLength":2271,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=45453222"},{"title":"Why I chose Lua for this blog","url":"https://andregarzia.com/2025/03/why-i-choose-lua-for-this-blog.html","date":1759424335,"author":"nairadithya","guid":233,"unread":true,"content":"<p>This blog used to run using with a stack based on <a href=\"https://racket-lang.org/\">Racket</a> using <a href=\"https://docs.racket-lang.org/pollen/\">Pollen</a> and <a href=\"https://andregarzia.com/2022/05/How-this-blog-works-or-embracing-chaos.html\">lots of hacks on top of it</a>. At some point I realised that my setup was working against me. The moving parts and workflow I created added too much friction to keep my blog active. That happened mostly because it was a static generator trying to behave as if it was dynamic website with an editing interface. That can be done really well — cue <a href=\"https://getgrav.org/\">Grav CMS</a> — but that was not the case for me.</p><p>Once I decided to rewrite this blog as a simpler system, I faced the dilema of what stack to choose. The obvious choice for me would be Javascript, it is the language I use more often and one that I am quite confortable with. Still, I don't think it is a wise choice for the kind of blog I want to maintain.</p><p>Talking to some friends recently, I noticed that many people I know that have implemented their own blogging systems face many challenges keeping them running over many years. Not because it is hard to keep software running, but because their stack of choice is moving faster than their codebase.</p><p>This problem is specially prevalent in the Javascript world. It is almost a crime that JS as understood by the browser is this beautiful language with extreme retrocompatibility, while JS as understood and used by the current tooling and workflows is this mess moving at lightspeed. Let me unpack that for a bit.</p><p>You can open a web page from 1995 on your browser of choice and it will just work because browser vendors try really hard to make sure they don't break the web.</p><p>Developers who built the whole ecosystem of NodeJS, NPM, and all those libraries and frameworks don't share the same ethos. They all make a big case of semantic versioning and thus being able to handle breaking changes, but they have breaking changes all the time. You'd be hardpressed to actually run some JS code from ten years ago based on NodeJS and NPM. There is a big chance that dependencies might be gone, broken, or it might be incompatible with the current NodeJS.</p><blockquote><p>I know this sounds like FUD, and that for many many projects, maybe even most projects, that will not be the case. But I heard from many people that keeping their blogging systems up to date requires a lot more work than they would like to do and if they don't, then they're screwed.</p></blockquote><p>That is also true about other languages even though many of them move at a slower speed. A friend recently complained about a blogging system he implemented that requires Ruby 2.0 and that keeping that running sucks.</p><p>I want a simpler blogging system; one that requires minimal changes over time.</p><p>One characteristic that I love about it, is that is evolves very slowly. Lua 5.1 was introduced in 2006, Lua 5.4 which is the current version initial release was in 2020. Yes, there are point released in between, but you can see how much slower it moves when compared to JS.</p><p>The differences between Lua 5.1 and Lua 5.4 are minimal when compared with how much other languages changed in the same time period.</p><p>Lua only requires a C89 compiler to bootstrap itself. It is very easy to make Lua work and even easier to make it interface with something.</p><p>JS is a lot larger than Lua, there is more to understand and more to remember. My blog needs are very simple and Lua can handle them with ease.</p><p>This is an old-school blog. I uses <a href=\"https://en.wikipedia.org/wiki/Common_Gateway_Interface\">cgi-bin</a> — aka Comon Gateway Interface — scripts to run it. It is a dynamic website with a <a href=\"https://sqlite.org\">SQLite</a> database holding its data. When you open a page, it fetches the data from a database and assembles a HTML to send to the browser using <a href=\"https://luarocks.org/modules/olivine-labs/lustache\">Mustache</a> templates.</p><p>One process per request. Like the old days.</p><p>You might argue that if I went with NodeJS, I'd be able to serve more requests using fewer resources. That is true. I don't need to serve that many requests though. My peak access was a couple years ago with 50k visitors on a week, even my old Racket blog could handle that fine. The Lua one should handle it too; and if it breaks it breaks. I'm a flawed human being, my code can be flawed too, we're in this together, holding hands.</p><p>Your blog is your place to experiment and program how you want it. You can drop the JS fatigue, you can drop your fancy Haskell types, you can just do whatever you find fun and keep going (and that includes JS and Haskell if that's your thing. You do you).</p><p>Cause I'm using Lua, I don't have as many libraries and frameworks available to me as JS people have, but I still have quite a large collection via <a href=\"https://luarocks.org\">Luarocks</a>. I try not to add many dependencies to my blog. At the moment there are about ten and that is mostly because Lua is a batteries-not-included language so you start from a minimal core and build things up to suit your needs.</p><p>For a lot of things I went with the questionable choice of implementing things myself. I got my own little CGI library. It is 200 lines long and does the bare minimum to make this blog work. I got my own little libraries for many things. <a href=\"https://www.w3.org/TR/micropub/\">Micropub</a> and <a href=\"https://indieauth.net/\">IndieAuth</a> were all implemented by hand.</p><p>At the moment I'm  having a lot of fun implementing <a href=\"https://indieweb.org/Webmention\">WebMentions</a>. Doing the <a href=\"https://microformats.org/wiki/microformats2\">Microformats2</a> extraction on my own is teaching me a lot of things.</p><p>What I want to say is that by choosing a small language that moves very slowly and very few dependencies, I can keep all of my blogging system in my head. I can make sure it will run without too much change for the next ten or twenty years.</p><blockquote><p>Lua is a lego set, a toolkit, it adapts to you and your needs. I don't need to keep chasing the new shiny or the latest framework du jour. I can focus on making the features I want and actually understanding how they work.</p></blockquote><p>Instead of installing a single dependency in another language and it pulling a hundred of other small dependencies all of which were transpiled into something the engine understands to the point that understanding how all the pieces work and fit together takes more time than to learn a new language, I decided to keep things simple.</p><p>I got 29 Luarocks installed here and that is for all my Lua projects in this machine. That is my blog, my game development, my own work scripts for my day job. Not even half of those are for my blog.</p><p>I often see wisdom in websites such as Hacker News and Lobsters around the idea of \"choosing boring\" because it is proven, safe, easier to maintain. I think that boring is not necessarily applicable to my case. I don't find Lua boring at all, but all that those blog posts talk about that kind of mindset are all applicable to my own choices here.</p><p>Next time you're building your own blogging software, consider for a bit for how long do you want to maintain it. I first started blogging on macOS 8 in 2001. I choose badly many times and in the end couldn't keep my content moving forward in time with me as softwares I used or created became impossible to run. The last two changes: from JS to Racket and from Racket to Lua have been a lot safer and I managed to carry all my content forward into increasingly simpler setups and workflows.</p><p>My blogging system is not becoming more complex over the years, it is becoming smaller, because with each change I select a stack that is more nimble and smaller than the one I had before. I don't think I can go smaller than Lua though.</p><ul><li>A language I can fully understand and keep on my head.</li><li>A language that I know how to build the engine and can do it if needed.</li><li>An engine that requires very few resources and is easy to interface with third-party libraries in native code.</li></ul><p>I chose Lua because of all that, and I'm happy with it and hope this engine will see me through the next ten or so years.</p>","contentLength":7534,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=45452261"},{"title":"Playball – Watch MLB games from a terminal","url":"https://github.com/paaatrick/playball","date":1759421355,"author":"ohjeez","guid":232,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=45451577"},{"title":"N8n added native persistent storage with DataTables","url":"https://community.n8n.io/t/data-tables-are-here/192256","date":1759415183,"author":"XCSme","guid":230,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=45450044"},{"title":"Potential issues in curl found using AI assisted tools","url":"https://mastodon.social/@bagder/115241241075258997","date":1759411795,"author":"robhlam","guid":229,"unread":true,"content":"","contentLength":0,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=45449348"},{"title":"How I block all 26M of your curl requests","url":"https://foxmoss.com/blog/packet-filtering/","date":1759174641,"author":"foxmoss","guid":228,"unread":true,"content":"<p>Bots have always been a problem on the internet. Be it DDOSing, AI scrapers,\netc. It’s a treadmill problem and no solution will ever be perfect, but we can\nblock many minimum effort attempts.</p><p>I recently went down a coding rabbit hole. Packet filtering and analysis is a fascinating field.\nThere’s just a bone in my body that likes writing software at a scale that’s bigger than it’ll ever\nbe used. So how do you handle network requests fast? Well, write an operating system and custom\nnetwork drivers specifically optimized for speed. We won’t be doing that today, but we can get closer\nto the bare metal fairly easily without sacrificing the Linux ecosystem. <a href=\"https://en.wikipedia.org/wiki/Express_Data_Path\">XDP - Express Data\nPath</a> is that way of getting closer to your network\ndevice. And according to some benchmarks Wikipedia cites, you can drop 26 million packets per second\non consumer hardware. This is really good load handling, especially for a single server. Both Linux\nand surprisingly Windows support XDP, but we’re just going to be focusing on Linux because that’s\nwhat I have, and that’s what you’re going to read.</p><h3>So how do we actually write this?</h3><p>XDP works on <a href=\"https://ebpf.io/\">eBPF - Extended Berkeley Packet Filter</a>. We can just load our eBPF\nfilter, on to our network device with some XDP utilities, and our filter which will start taking in\nall inbound requests. If we want we can also get our eBPF to pass our request back into the program\nthat loaded it in and do additional processing in userspace. This turns out to be ~400 lines of\nboilerplate in C which you can read <a href=\"https://github.com/FoxMoss/fox-xdp\">here</a>. This isn’t a\ntutorial, you can figure things out. That’s not the real interesting bit, the real magic happens on\nthe filter.</p><p>8 billion devices run Java, and at least like a billion probably run eBPFs. eBPF is a tiny virtual\nmachine that hides in your kernel. You compile your code down to something that looks pretty low\nlevel, you have your jumps and your registers and things you would expect, no SIMD, no x86 bloat but\nit’s enough to have a decent  compilation target.</p><p>So lets start to parse things out in a eBPF filter:</p><pre tabindex=\"0\" data-language=\"c\"><code></code></pre><p>There’s a couple oddities there that I’ll explain. The kernel won’t load the program if it’s not\nGPL, so that’s required at the bottom. The  start and  variables just point to the start\nand end of your full packet, starting with the Data Link layer, that’s Ethernet frames. The OSI\nmodel you reluctantly learned in college is actually going to come in handy here because we have to\nwrite our own network parser. The other weird thing is that we’re grabbing the data_end, why?\nBecause we need to validate our program. One of the benefits for this all running on a reduced\ninstruction set is that we can easily validate if the program can accidentally cause an out of\nbounds read given some input, because your network driver crashing while trying to filter\nbad packets seems like a pretty easy attack vector, especially since most of eBPF filters are written\nin C.</p><p>So here’s an example of this bounds check while we get our IP packet parsed.  comes\ngraciously from our kernel headers and we can quickly check if that struct fits into our full data\nbuffer before we start reading any values.</p><pre tabindex=\"0\" data-language=\"c\"><code></code></pre><p>So to fingerprint the client and determine whether or not a client is coming from curl we need to\nparse the TLS packets. So once we just make sure everything looks good in TCP land, then if the\npacket starts with the TLS handshake and the version we care about we can then start to get it’s\nsignature.</p><pre tabindex=\"0\" data-language=\"c\"><code></code></pre><h3>So how do you fingerprint a TLS connection</h3><p>I for the longest time was unaware of TLS fingerprinting, it’s probably that way intentionally\nbecause once lots of people know about it, it’s not hard to get around it, but I have nothing to\nhide so let me breakdown how we do this.</p><p>The modern standard for TLS fingerprint is <a href=\"https://github.com/FoxIO-LLC/ja4\">JA4</a> made by\n<a href=\"https://foxio.io/\">FoxIO</a> (no relation to me). The JA4 is just a string of some basic details about\nthe TLS connection, but it’s able to be traced back to your browser pretty easily. Here’s the full\nexplanation image that FoxIO provides:</p><p>What you may notice in particular is that JA4 needs a SHA256 hash to work, if we’re going to\ncalculate this entirely in eBPF we’re going to need to introduce a ton of complexity. Because what I\nfound out pretty quickly when I starting implementing SHA256 in a filter is that it’s hard to get it\nall to fit into the 512 byte stack space. So I started thinking, you could probably get it all in\nby using tail calls, chaining together multiple eBPFs in sequence, but that’s just more work when\nreally the point here is just to shrink down the space needed to store all the ciphers. So why not\njust use a non-cryptographic hash function here and cut down on program size? Using a\ncryptographically secure hash really doesn’t provide any benefits because an attacker can already\njust mimic another browser, no hash cracking needed. So here’s the spec for the new format</p><p>You can read the official documentation <a href=\"https://github.com/FoxMoss/fox-xdp/blob/main/docs/fst1.md\">here</a>.</p><p>Inside a TLS Client Hello, there’s just an arbitrary list of Cipher Suites. So what FST1 does and\nthe middle bit of JA4 does, is just parse them and hash them down. Each browser and HTTPS\nimplementation will use different ciphers, so we fingerprint that. And as an easy measure to avoid\nstoring duplicate lists of ciphers that are just in different orders we can sort the lists before\nthe hashing.</p><p>The <a href=\"https://en.wikipedia.org/wiki/Jenkins_hash_function\">Jenkins hash</a> is one of the simplest\nhashing algorithms you can get, literally just add some numbers and shift the bits around a little.\nHere’s what Wikipedia lists as a reference implementation.</p><pre tabindex=\"0\" data-language=\"c\"><code></code></pre><p>Now we also need to sort it, and that becomes trickier because I want to avoid making large arrays\nthat I would need to copy the Cipher Suites to on the tiny eBPF stack. So I embed the sorting\nalgorithm in the hashing function.</p><pre tabindex=\"0\" data-language=\"c\"><code></code></pre><p>Which is like a bastardized selection sort. The big O notation for it doesn’t look great being\nO(n^2) but the major advantage is that we only need to store two numbers in memory other than the\nhash. This is going to be more than enough for our use case here.</p><h3>Putting everything together</h3><p>Moving that into eBPF land we can pretty easily just tap into the ciphers,</p><pre tabindex=\"0\" data-language=\"c\"><code></code></pre><p>The  with the early returns is to keep the verifier happy, likewise with \nit yells at you for access the bytes raw even with bounds checking.</p><p>So I have the implementation working, just grabbing a printout of each request’s hashes we can see\nwhat userspace gives us matches what the filter gives us. So now that we can detect we can start\nblocking! Pulling up Wireshark we can just get a dump of the Cipher Suites, calculate the hash and\nstore it in a configuration file. So now how do we actually get data from userspace to the kernel?\nWe could embed it in the binary but that heavily limits the amount of hash we can actually fit. The\nsolution is eBPF maps, we can pass data back and forth by using a helpfully provided kernel hash map.</p><p>Surprising that we get a hash map here but not in native C, but I’m not complaining.</p><pre tabindex=\"0\" data-language=\"c\"><code></code></pre><p>The eBPF program can just look up the FST1 hash and if the value u8 is 1 and the key exists we can\nthen decide what to do with it. I just store a config value at the key of 0, so we can decide to\nblacklist or whitelist any hashes that get activated.</p><p>So that’s about it, I grabbed the hash of my curl client and created a config file with it\nblacklisted. - After accidentally killing my server trying to update the kernel version, then\nreinstalling everything - I can now just run the fox-filter program, and provided the curl exhibits the\nsame behavior as the curl that I installed with Arch Linux, the filter should block the request.</p><p>This is of course overzealous to just block all curl requests, but with tools like\n<a href=\"https://github.com/TecharoHQ/anubis/\">Anubis</a> being largely ineffective. I think it’s fun to see bot\ndetection that can’t be bypassed by setting your user agent to</p><pre tabindex=\"0\" data-language=\"plaintext\"><code></code></pre><p>(Yes this is real at the time of writing, try it out yourself)</p><p>There’s ways to get around TLS signatures but it’s much harder and requires a lot more legwork to\nget working, compounded even more if your forced to implement TLS extensions. It’s also a technique\nthat useful for passively viewing traffic patterns, and see when user agents lie.</p><p>Pretty fast! With some preliminary benchmarks it seems to beat doing it in user space by a hair. All\nof this is still pretty fast either way.</p><p>Big thanks to Sakura from Papyrus Networks (<a href=\"mailto:sakura@voxga.xyz\">sakura@voxga.xyz</a>) for getting me interested in TLS fingerprinting.</p><p>Shout out to <a href=\"https://foxio.io/\">FoxIO</a> for documenting these techniques.</p><p>Thanks to Nihaal for proofreading.</p>","contentLength":8497,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=45417826"},{"title":"The history of cataract surgery","url":"https://www.asimov.press/p/cataracts","date":1759158247,"author":"mailyk","guid":227,"unread":true,"content":"<p><em><a href=\"https://press.asimov.com/articles/editors-note-8\" rel=\"\">on our website</a></em></p><p><a href=\"https://en.wikipedia.org/wiki/Eye_of_Horus\" rel=\"\">Eye of Horus</a><a href=\"https://surflegacy.net/eye-of-odin-symbol/\" rel=\"\">divine eye of Odin</a><a href=\"https://www.lotussculpture.com/blog/third-eye-hinduism-buddhism/?srsltid=AfmBOorpuJPbMqKEtG3T2mq9PZLGifjkWdtB5ACntwtDK2KuAdMyXdf4\" rel=\"\">third eye of inner knowledge</a></p><p><a href=\"https://www.eophtha.com/posts/anatomy-of-lens\" rel=\"\">lens of the human eye</a></p><p>Throughout much of history, then, when an eye was damaged, there was little that could be done to heal it. And even today, ophthalmologists like myself struggle to address the idiosyncrasies of this organ when treating ocular and vision disorders.</p><p><a href=\"https://www.thelancet.com/journals/langlo/article/PIIS2214-109X(20)30488-5/fulltext\" rel=\"\">596 million people</a></p><p><a href=\"https://www.nature.com/articles/s41433-025-03745-x\" rel=\"\">most frequently performed</a><a href=\"https://ucfhealth.com/our-services/ophthalmology/cataract-surgery-cost/\" rel=\"\">$6,000</a><a href=\"https://www.iapb.org/news/financing-eye-health-in-tanzania/\" rel=\"\">as low as $150</a></p><p><a href=\"https://pubmed.ncbi.nlm.nih.gov/8724222/\" rel=\"\">leading cause of blindness</a><a href=\"https://www.ncbi.nlm.nih.gov/books/NBK559253/\" rel=\"\">above 95 percent</a></p><p><a href=\"https://en.wikipedia.org/wiki/Cataract\" rel=\"\">cataract</a></p><p><a href=\"https://assets.cureus.com/uploads/review_article/pdf/290816/20241031-373899-dxij7y.pdf\" rel=\"\">Maharshi Sushruta</a><a href=\"https://journals.lww.com/ijo/fulltext/2003/51020/susruta_of_ancient_india.2.aspx\" rel=\"\">couching</a></p><p>Couching entailed pushing the clouded lens (the cataract) into the vitreous chamber, or back portion of the eye, using a curved needle. Crucially, this procedure merely shifted the cataract away from the pupil to allow light into the eye, temporarily restoring limited sight without actually removing the cataract. Patients were often left with poor focus or blurred vision as a result.</p><p><a href=\"https://pmc.ncbi.nlm.nih.gov/articles/instance/1017376/pdf/brjopthal00255-0060.pdf\" rel=\"\">meticulous for its time</a><a href=\"https://pmc.ncbi.nlm.nih.gov/articles/PMC7729313/#:~:text=In%20Egypt%2C%20copper%20needles%20or,seven%20ophthalmic%20specialists%20are%20known.\" rel=\"\">thorns or metal</a></p><p>The surgeon then gently pushed or scraped the lens to move it out of the line of sight. The patient was asked to close the nostril opposite the treated eye and blow through the other, a technique believed to help expel the “phlegm” (kapha) from the eye.</p><p><a href=\"https://journals.lww.com/ijo/fulltext/2003/51020/susruta_of_ancient_india.2.aspx\" rel=\"\">clarified butter (ghee)</a></p><p><a href=\"https://www.cureus.com/articles/290816-sushruta-the-father-of-surgery-and-ancient-medical-innovations#!/\" rel=\"\">surgical methods</a></p><p><a href=\"https://cdn.intechopen.com/pdfs/42710/intech-the_history_of_cataract_surgery.pdf\" rel=\"\">references to the treatment of cataracts</a><a href=\"https://www.researchgate.net/journal/Clinical-Ophthalmology-1177-5483/publication/301251974_A_medieval_fallacy_the_crystalline_lens_in_the_center_of_the_eye/links/66103d4ea7c907287a449760/A-medieval-fallacy-the-crystalline-lens-in-the-center-of-the-eye.pdf?_tp=eyJjb250ZXh0Ijp7ImZpcnN0UGFnZSI6InB1YmxpY2F0aW9uIiwicGFnZSI6InB1YmxpY2F0aW9uRG93bmxvYWQiLCJwcmV2aW91c1BhZ2UiOiJwdWJsaWNhdGlvbiJ9fQ\" rel=\"\">Celsus described</a><a href=\"https://cdn.intechopen.com/pdfs/42710/intech-the_history_of_cataract_surgery.pdf\" rel=\"\">evidence of sharp instruments from excavations across</a></p><p><a href=\"https://www.researchgate.net/publication/284712095_Ammar_ibn_Ali_al-Mawsili_and_His_Innovating_Suction_Method_for_the_Treatment_of_Cataract\" rel=\"\">Ammar ibn Ali al-Mawsili</a><em>Muntakhabfi ‘ilaj al-’ayn</em><em>The Select Work on the Treatment of the Eye</em></p><p>His innovation marked a distinct conceptual evolution: the lens was no longer a part of the eye to be pushed aside, but a pathological entity requiring removal.</p><p><a href=\"https://books.google.co.in/books?id=v0oL8xDJ0VEC&amp;pg=PA409&amp;redir_esc=y#v=onepage&amp;q&amp;f=false\" rel=\"\">Jacques Daviel, a French military surgeon</a></p><p>To appreciate the significance of this approach, it is important to understand the anatomy involved. During cataract surgery, the cloudy lens rests in front of the vitreous body, a clear, jelly-like substance filling most of the eye. The retina, responsible for vision, attaches to the back of the eye, behind the vitreous. If the posterior capsule is broken, the vitreous can move forward and disturb the delicate retina, increasing the risk of vision loss. By keeping the posterior capsule intact, the surgeon preserved both the vitreous and the posterior chamber, the space just behind the lens, thereby maintaining the eye’s natural structure and function. Daviel’s preservation of the posterior capsule is still followed in cataract operations today.</p><p><a href=\"https://jfophth.com/evolution-of-cataract-surgery/\" rel=\"\">Samuel Sharp</a><a href=\"https://pmc.ncbi.nlm.nih.gov/articles/PMC1692229/?page=21\" rel=\"\">intracapsular cataract extraction</a></p><p><a href=\"https://royalsocietypublishing.org/doi/pdf/10.1098/rstl.1753.0050\" rel=\"\">detailed this procedure</a></p><p><a href=\"https://royalsocietypublishing.org/doi/pdf/10.1098/rstl.1753.0050\" rel=\"\">careful to note</a></p><p>Perhaps the largest “deficiency” of both Daviel and Sharp’s techniques was that patients who underwent them were left “aphakic,” with their natural lens gone and their vision blurred. With the help of thick convex spectacles, their sight was often clearer than it would have been with couching, but these glasses were bulky and still left the wearer with distorted sight and limited peripheral vision.</p><p><a href=\"https://en.wikipedia.org/wiki/Dioptre\" rel=\"\">diopters</a></p><p>So while Daviel and Sharp recognized the importance of actually removing cataracts, they had not yet hit upon a means of replacement.</p><p><a href=\"https://journals.lww.com/kjop/fulltext/2020/32030/sir_harold_ridley_and_the_intraocular_foreign_body.21.aspx\" rel=\"\">Harold Ridley</a></p><p><a href=\"https://www.escrs.org/eurotimes-articles/harold-ridley-s-brilliant-innovation/\" rel=\"\">design for the first intraocular lens (IOL).</a></p><p><a href=\"https://journals.lww.com/kjop/fulltext/2020/32030/sir_harold_ridley_and_the_intraocular_foreign_body.21.aspx\" rel=\"\">found Elizabeth Attfield,</a></p><p><a href=\"https://rayner.com/wp-content/uploads/sites/5/2021/12/Invention_of_the_IOL.pdf\" rel=\"\">waited three months</a></p><p>An implantation on a second patient in August 1950 resulted in a change of –15 diopters. After modifying the curvature of the artificial lens surface, which determines its focusing power, Ridley’s third IOL in November 1950 achieved a much more acceptable result of +4.5 diopters, closely matching the patient’s other eye.</p><p><a href=\"https://pmc.ncbi.nlm.nih.gov/articles/PMC1323886/?page=7\" rel=\"\">no suture was used</a></p><p>Ridley waited for 18 months after his first IOL implantation before presenting his findings, hoping to showcase two-year follow-up results to prove the procedure’s safety and efficacy. However, an unexpected coincidence forced his hand. One of his patients, consulting the telephone directory for his post-operative visit, found a “Dr. Ridley” listed, made an appointment, and arrived at the address, only to discover he was at the office of Dr. Frederick Ridley, a different ophthalmologist. After this encounter, the news quickly spread.</p><p><a href=\"https://royalsocietypublishing.org/doi/pdf/10.1098/rsbm.2007.0022?download=true\" rel=\"\">presented his work</a></p><p><a href=\"https://pmc.ncbi.nlm.nih.gov/articles/PMC12187139/\" rel=\"\">Sir Stewart Duke-Elder, the doyen of British ophthalmology</a><a href=\"https://play.google.com/store/books/details/David_J_Apple_Sir_Harold_Ridley_and_His_Fight_for?id=tMVSVumHzHUC\" rel=\"\">observed that he must have felt foolish</a></p><blockquote><p>“There he was, the greatest and most influential of all British ophthalmologists, the ‘ophthalmic Aladdin’ as he was sometimes called. He had not seen and made the connection as to what may have been right before his eyes — the idea to invent the IOL.”&nbsp;</p></blockquote><p><a href=\"https://pmc.ncbi.nlm.nih.gov/articles/PMC1323886/?page=9\" rel=\"\">published the results</a><a href=\"https://books.google.com/books?hl=en&amp;lr=&amp;id=tMVSVumHzHUC&amp;oi=fnd&amp;pg=PA3&amp;ots=VKc1_6a0Ya&amp;sig=g0nuHKpNReddz7cz7k04enP4yqo#v=onepage&amp;q=Sir%20Duke-Elder&amp;f=false\" rel=\"\">voiced critiques</a><a href=\"https://journals.lww.com/kjop/fulltext/2020/32030/sir_harold_ridley_and_the_intraocular_foreign_body.21.aspx\" rel=\"\">Peter Choyce and Edward Epstein</a><a href=\"https://journals.lww.com/kjop/fulltext/2020/32030/sir_harold_ridley_and_the_intraocular_foreign_body.21.aspx\" rel=\"\">Soviet surgeon Svyatoslav Fyodorov</a></p><p><a href=\"https://doctorlib.org/surgery/cataract/36.html\" rel=\"\">thousands of modified lens designs</a><a href=\"https://play.google.com/store/books/details/David_J_Apple_Sir_Harold_Ridley_and_His_Fight_for?id=tMVSVumHzHUC\" rel=\"\">reflected that</a></p><p><a href=\"https://play.google.com/store/books/details/David_J_Apple_Sir_Harold_Ridley_and_His_Fight_for?id=tMVSVumHzHUC\" rel=\"\">establishing a bright, new world for IOLs</a><a href=\"https://www.sciencedirect.com/science/article/pii/S2405844025012939\" rel=\"\">Charles D. Kelman, an American ophthalmologist</a><a href=\"https://crstodayeurope.com/articles/2006-sep/0906_14-php/\" rel=\"\">himself fall to pieces</a></p><p>The hum of this scaler sparked an idea that would propel cataract surgery into its modern form: What if, he thought, a cataract could be emulsified — broken into tiny particles to be more easily removed from the eye? This would minimize trauma to the eye, speed up recovery, and reduce postoperative complications.</p><p><a href=\"https://pmc.ncbi.nlm.nih.gov/articles/PMC11225641/\" rel=\"\">first device</a></p><p><a href=\"https://www.thelancet.com/action/showPdf?pii=S0140-6736(04)16646-4\" rel=\"\">four hours to complete</a><a href=\"https://crstodayeurope.com/articles/2013-sep/from-music-to-medicine/#:~:text=However,%20by%201967,%20Charlie%20felt,a%20contractual%20arrangement%20with%20Cavitron.\" rel=\"\">much heavier</a><a href=\"https://www.thelancet.com/action/showPdf?pii=S0140-6736%2804%2916646-4\" rel=\"\">removed</a><a href=\"https://journals.lww.com/tnoa/fulltext/2018/56010/remembering_dr__charles_d__kelman_and_development.17.aspx\" rel=\"\">fraught with such complications</a></p><p><a href=\"https://pmc.ncbi.nlm.nih.gov/articles/PMC11056193/\" rel=\"\">10 to 12 millimeters</a><a href=\"https://www.ncbi.nlm.nih.gov/books/NBK576419/\" rel=\"\">under 3 millimeters</a></p><p><a href=\"https://pmc.ncbi.nlm.nih.gov/articles/PMC4655462/\" rel=\"\">Zoltan Nagy</a><a href=\"https://crstodayeurope.com/articles/2009-sep/0909_06-php/\" rel=\"\">femtosecond laser</a></p><p><a href=\"https://www.youtube.com/watch?v=PLSKmeAV43M\" rel=\"\">cataract surgery begins</a><a href=\"https://www.ncbi.nlm.nih.gov/books/NBK576419/\" rel=\"\">40,000 times per second</a></p><p><a href=\"https://www.hopkinsmedicine.org/health/treatment-tests-and-therapies/cataract-surgery\" rel=\"\">whole process takes about 20 minutes</a></p><p><a href=\"https://europe.ophthalmologytimes.com/view/adjustable-intraocular-lenses-after-cataract-surgery-0\" rel=\"\">be fine-tuned after surgery using ultraviolet light</a></p><p>Of course, this is not the case for everyone. Despite being one of the most successful medical interventions, cataract surgery remains inaccessible to vast segments of the world’s population due to inequities in infrastructure, personnel, and financing.</p><p><a href=\"https://pmc.ncbi.nlm.nih.gov/articles/PMC11293407/#:~:text=Introduction,gap%20is%20projected%20to%20increase.\" rel=\"\">Cataract Surgical Rate</a><a href=\"https://pmc.ncbi.nlm.nih.gov/articles/PMC8986350/\" rel=\"\">North America and Europe</a></p><p><a href=\"https://pmc.ncbi.nlm.nih.gov/articles/PMC7147181/\" rel=\"\">2015 study</a></p><p><a href=\"https://journals.lww.com/njcp/fulltext/2015/18030/eliminating_the_barriers_to_uptake_of_cataract.6.aspx\" rel=\"\">$71 for outreach cases in Nigeria</a><a href=\"https://avehjournal.org/index.php/aveh/article/view/901/2386\" rel=\"\">$299 in other parts of Africa</a><a href=\"https://gh.bmj.com/content/2/Suppl_4/e000434\" rel=\"\">in Madagascar</a></p><p><a href=\"https://www.ijcmph.com/index.php/ijcmph/article/view/13837/8437\" rel=\"\">imbalance between the sexes</a><a href=\"https://www.iapb.org/wp-content/uploads/Gender-and-cataract-surgery_NWP_Mar-2016.pdf\" rel=\"\">additional barriers</a></p><p><a href=\"https://pmc.ncbi.nlm.nih.gov/articles/PMC8093883/\" rel=\"\">global productivity loss due to vision impairment</a><a href=\"https://pmc.ncbi.nlm.nih.gov/articles/PMC2879361/\" rel=\"\">the economic trajectory of their entire household.</a></p><p><a href=\"https://www.researchgate.net/profile/Thulasiraj-Ravilla/publication/263430927_Efficient_high-volume_cataract_services_The_Aravind_model/links/552d085c0cf29b22c9c49d50/Efficient-high-volume-cataract-services-The-Aravind-model.pdf?origin=publication_detail&amp;_tp=eyJjb250ZXh0Ijp7ImZpcnN0UGFnZSI6InNpZ251cCIsInBhZ2UiOiJwdWJsaWNhdGlvbkRvd25sb2FkIiwicHJldmlvdXNQYWdlIjoicHVibGljYXRpb24ifX0\" rel=\"\">challenges are surmountable</a><a href=\"https://aravind.org/our-story/\" rel=\"\">Aravind Eye Hospital</a></p><p>Aravind Eye Hospital was founded in 1976. Today, it is one of the largest eye care providers in the world, with a network of 14 hospitals across South India. The surrounding state is historically one of India’s poorest regions.</p><p><a href=\"https://aravind.org/donate/#:~:text=Though%20Aravind%27s%20core%20services%20are,closer%20to%20achieving%20its%20mission.\" rel=\"\">self-funding business model</a></p><p><a href=\"https://www.aao.org/young-ophthalmologists/yo-info/article/aurolab-india-revolution-affordable-eye-care-one\" rel=\"\">$100 per lens</a><a href=\"https://www.aao.org/young-ophthalmologists/yo-info/article/aurolab-india-revolution-affordable-eye-care-one\" rel=\"\">U.S. $10</a><a href=\"https://www.aurolab.com/products/category/iol\" rel=\"\">safety and optical quality of imported versions</a><a href=\"https://www.seva.org/site/SPageServer/?pagename=25_Years_of_Aurolab\" rel=\"\">exported to more than 140 countries</a></p><p><a href=\"https://www.researchgate.net/profile/Thulasiraj-Ravilla/publication/263430927_Efficient_high-volume_cataract_services_The_Aravind_model/links/552d085c0cf29b22c9c49d50/Efficient-high-volume-cataract-services-The-Aravind-model.pdf?origin=publication_detail&amp;_tp=eyJjb250ZXh0Ijp7ImZpcnN0UGFnZSI6InNpZ251cCIsInBhZ2UiOiJwdWJsaWNhdGlvbkRvd25sb2FkIiwicHJldmlvdXNQYWdlIjoicHVibGljYXRpb24ifX0\" rel=\"\">less than 15 percent</a></p><p><a href=\"https://www.sightsavers.org/wp-content/uploads/2021/08/Sightsavers-Global-Annual-Report-2020.pdf\" rel=\"\">Sightsavers</a><a href=\"https://www.lionsclubs.org/en/member-resource-center/service/global-causes-initiatives/vision\" rel=\"\">Lions Clubs</a><a href=\"https://www.helpageindia.org/our-work/healthcare/restoration-of-vision-correction\" rel=\"\">HelpAge India</a><a href=\"https://www.sightsavers.org/wp-content/uploads/2017/11/14755_Insight-Plus-Issue-2-FINAL.pdf\" rel=\"\">provide awareness campaigns</a></p><p><a href=\"https://d3.harvard.edu/platform-rctom/submission/aravind-eye-care-system-mcdonaldization-of-eye-care/\" rel=\"\">six to eight cataract operations</a></p><p><a href=\"https://d3.harvard.edu/platform-rctom/submission/aravind-eye-care-system-mcdonaldization-of-eye-care/\" rel=\"\">60 percent</a></p><p><a href=\"https://pmc.ncbi.nlm.nih.gov/articles/PMC3562965/\" rel=\"\">National Program for Control of Blindness and Visual Impairment (NPCBVI)</a><a href=\"https://www.pib.gov.in/PressReleasePage.aspx?PRID=1944598\" rel=\"\">Netra Jyoti Abhiyan</a><a href=\"https://pmc.ncbi.nlm.nih.gov/articles/PMC1772878/\" rel=\"\">Vision 2020 initiative</a><a href=\"https://pmc.ncbi.nlm.nih.gov/articles/PMC10021674/\" rel=\"\">greatly reduced cataract blindness</a></p><p>Ultimately, efforts such as these acknowledge the fact that a successful cataract program is a clear public good, a clinical intervention with enormous implications for the economy and global health. It is not measured only in restored sight but in restored agency: the grandmother who reads again, the laborer who returns to work, the child who need not drop out of school to guide a blind parent.</p><p><a href=\"https://www.amazon.in/Mastering-Glaucoma-Comprehensive-Guide-Postgraduates-ebook/dp/B0CP6DF47Y\" rel=\"\">Mastering Glaucoma</a><a href=\"https://www.amazon.in/Mastering-Uvea-comprehensive-guide-Postgraduates-ebook/dp/B0CR8D6PC1\" rel=\"\">Mastering Uvea</a></p><p><a href=\"https://www.thehindu.com/profile/author/C---Aravinda-21711/\" rel=\"\">Dr. Aravinda</a></p><p>Lead image by Ella Watkins-Dulaney.</p>","contentLength":6913,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=45414718"},{"title":"A simple habit that saves my evenings","url":"https://alikhil.dev/posts/the-simple-habit-that-saves-my-evenings/","date":1759148969,"author":"alikhil","guid":226,"unread":true,"content":"<p>As a software engineer, I often work on big tasks that require hours of continuous and focused work. However, we have plenty of meetings, colleagues asking us something in Slack, and lunch breaks. Add a colleague who comes to you and calls you for a cup of coffee if you work from the office.</p><p>And usually, we don’t really have such a luxury as  of uninterrupted time.</p><p>Nevertheless, sometimes we catch <a href=\"https://www.amazon.com/Flow-Psychology-Experience-Perennial-Classics/dp/0061339202\"></a> of productive and focused work at the end of the workday. Imagine you come up with an elegant solution to a problem you’ve been tackling all day, or maybe even the whole past week. You can’t wait to implement and test your solution. And of course, you are so driven by your idea that you decide to continue working despite your working day being over. “20 minutes more and I will finish it,” you think. Obviously, this is not the case; some edge cases and new issues will inevitably arise. You come to your senses only 2–3 hours later—tired, hungry, demotivated, and still struggling with your problem. You just wasted your evening, with nothing to show for it. Worse, you overworked and didn’t recover that night. Thus, you were already exhausted when you started working.</p><p>You can imagine what will follow next. Nothing good, really.</p><p>I remember this happening back when I worked at a fast-growing startup, KazanExpress, while living in <a href=\"https://en.wikipedia.org/wiki/Innopolis\">Innopolis</a>. Our office was buzzing with energy, and the pace was intense—we often pushed ourselves late into the night. One evening, I felt like I had finally cracked a tricky part of our infrastructure. I thought, “Just 20 more minutes and I’ll finish it.” Of course, those 20 minutes stretched into well over three hours. By the time I left the office, I was tired, hungry, and frustrated—without any real progress to show. The next morning, walking back to the office, I realized how drained I already felt before even starting work. That was when it became clear to me: it’s better to stop, write down the next steps, and come back with a fresh head.</p><p>Of course, some might argue, “But you are considering only a negative scenario; one could really finish that job in 20 minutes and go home happy…”. Sure, but I think this risk is not worth it. Instead, I would suggest doing another thing.</p><p>Rather than trying to complete your task in 20 minutes, take this time to write down your thoughts, and a step-by-step action plan of what you think you need to do to finish your task. Then go home. Rest. A feeling of incompleteness will motivate you to come back and finalize your work the next day. Only you will be full of energy, together with a settled plan. No doubt you’ll accomplish your task before lunch.</p><p>Writing down the next steps helps to clear your mind after a  workday. You write and forget about your work until the next morning.</p><p>As a bonus, there is a chance that new, better ideas will come while you sleep or rest.</p><p>I have been using this trick for more than 5 years now, and it helps me to keep my work and life balanced.\nHere are the two main ideas of it:</p><ul><li>Write down the next steps before finishing your workday</li></ul>","contentLength":3090,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":"https://news.ycombinator.com/item?id=45412870"}],"tags":["dev","hn"]}